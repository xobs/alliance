.\"   $Id: getablexprsupport.3,v 1.1 2002/03/18 11:06:16 ludo Exp $
.\" @(#)getablexprsupport.2 2.7 96/07/02 ; Labo masi cao-vlsi; Author : Jacomme Ludovic
.TH GETABLEXPRSUPPORT 3 "October 1, 1997" "ASIM/LIP6" "ABL FUNCTIONS"
.SH NAME
getablexprsupport \- gives the expression's support.
.so man1/alc_origin.1
.SH SYNOPSIS
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include "abl101.h"
 void \(**getablexprsupport( Expr, Mode )
  chain_list \(**Expr;
  int         Mode;
.ft R
.fi
.SH PARAMETERS
.TP 20
\fIExpr\fP
Expression.
.TP
\fIMode\fP
The returned support's mode.
.SH DESCRIPTION
\fBgetablexprsupport\fP gives the support of \fIExpr\fP. if \fIMode\fP
is ABL_SUPPORT_CHAIN the support is returned using \fIchain_list\fP
else it is returned using \fIptype_list\fP. The support must be freed
using the \fIfreechain\fP or \fIfreeptype\fP functions.
.br
.SH RETURN VALUE
\fBgetablexprsupport\fP returns a pointer to a \fIchain_list\fP or
a \fIptype_list\fP.
.SH EXAMPLE
.ta 3n 6n 9n 12n 15n 18n 21n
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include "abl101.h"
  chain_list \(**Expr;
  ptype_list \(**Support;
  ptype_list \(**ScanSupport;
  Expr = createablbinexpr( ABL_AND,
                           createablatom( "a" ),
                           createablatom( "b" ) );
  Support = getablexprsupport( Expr, ABL_SUPPORT_PTYPE );
  /* displays a b */
  for ( ScanSupport  = Support; 
        ScanSupport != (ptype_list \(**)0;
        ScanSupport  = ScanSupport->NEXT )
  {
    printf( "%s ", (char *)ScanSupport->DATA );
  }
  freeptype( Support );
.ft R
.fi
.SH SEE ALSO
.BR abl (1)


.so man1/alc_bug_report.1

