.\"   $Id: devablxorexpr.3,v 1.1 2002/03/18 11:06:16 ludo Exp $
.\" @(#)devablxorexpr.2 2.7 96/07/02 ; Labo masi cao-vlsi; Author : Jacomme Ludovic
.TH DEVABLXOREXPR 3 "October 1, 1997" "ASIM/LIP6" "ABL FUNCTIONS"
.SH NAME
devablxorexpr \- develops 'xor', 'nxor' in an expression.
.so man1/alc_origin.1
.SH SYNOPSIS
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include "abl101.h"
chain_list \(**devablxorexpr( Expr )
  chain_list \(**Expr;
.ft R
.fi
.SH PARAMETERS
.TP 20
\fIExpr\fP
Expression to develop.
.SH DESCRIPTION
\fBdevablxorexpr\fP develops 'xor' or 'xnor' in \fIExpr\fP.
The expression pointer \fIExpr\fP MUSTN'T be used after the call to this function.
.br
.SH RETURN VALUE
\fBdevablxorexpr\fP returns a pointer to the modified expression.
.SH EXAMPLE
.ta 3n 6n 9n 12n 15n 18n 21n
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include "abl101.h"
  chain_list \(**Expr;
  Expr = createablbinexpr( ABL_XOR,
                           createablatom( "a" ),
                           createablatom( "b" ) );
  Expr = devablxorexpr( Expr );
  /* displays (a and (not b)) or ((not a) and b) */
  viewablexpr( Expr, ABL_VIEW_VHDL );
.ft R
.fi
.SH SEE ALSO
.BR abl (1),
.BR devdupablxorexpr(3).


.so man1/alc_bug_report.1

