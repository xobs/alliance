.\"   $Id: simplifDcZeroBdd.3,v 1.1 2002/04/03 13:13:26 ludo Exp $
.\" @(#)simplifDcZeroBdd.2 7.01 92/08/22 ; Labo masi cao-vlsi; Author : Luc Burgun
.TH SIMPLIFDCZEROBDD 3 "October 1, 1997" "ASIM/LIP6" "BDD functions"
.so man1/alc_origin.1
.SH NAME
\fBsimplifDcZeroBdd\fP \- simplifies a BDD with don't cares on its off-set part
.SH SYNOPSIS
.nf
#include "logmmm.h"
pNode simplifDcZeroBdd(pBdd1,pBdd2)
pNode pBdd1;
pNode pBdd2;
.fi
.SH PARAMETERS
.TP 20
\fIpBdd1\fP
BDD to simplify
.TP 20
\fIpBdd2\fP
"don't care" function
.SH DESCRIPTION
\fBsimplifDcZeroBdd()\fP simplifies \fIpBdd1\fP with \fIpBdd2\fP. \fIpBdd2\fP must be included imperatively in the off-set part of pBdd1. This function returns a BDD that depends to the order of the BDD.
.SH EXAMPLE
.nf
#include "mutnnn.h"		/* mbk utilities */
#include "logmmm.h"
pNode nodeA,NodeB;
pNode res,res1,res2;

initializeBdd(SMALL_BDD);
nodeA = createNodeTermBdd(3);
nodeB = createNodeTermBdd(3);
res1 = applyBinBdd(OR,nodeA,nodeB);	/* res1 = (OR a b) */
res2 = applyBinBdd(NOR,nodeA,nodeB);	/* res2 = (NOR a b) */
res = simplifDcZeroBdd(res1,res2);	/* res1 and res2 = 0 */
displayBdd(res,1);

/* it will display 
@res   ONE 
*/
	
destroyBdd(1);
.fi
.SH SEE ALSO
.BR log (1),
.BR bdd (1),
.BR simplifDcOneBdd (3),
.BR applyBdd (3),
.BR notBdd (3),
.BR constraintBdd (3),
.BR applyBinBdd (3),
.BR addListBdd (3),
.BR displayBdd (3),
.BR createNodeTermBdd (3).

.so man1/alc_bug_report.1

