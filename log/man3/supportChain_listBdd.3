.\"   $Id: supportChain_listBdd.3,v 1.1 2002/04/03 13:13:26 ludo Exp $
.\" @(#)supportChain_listBdd.2 7.01 92/08/22 ; Labo masi cao-vlsi; Author : Luc Burgun
.TH SUPPORTCHAIN_LISTBDD 3 "October 1, 1997" "ASIM/LIP6" "BDD functions"
.so man1/alc_origin.1
.SH NAME
\fBsupportChain_listBdd\fP \- returns a chained list of nodes that are used in a given BDD. 
.SH SYNOPSIS
.nf
#include "logmmm.h"
chain_list *supportChain_listBdd(pBdd)
pNode pBdd;
.fi
.SH PARAMETER
.TP 20
\fIpBdd\fP
BDD
.SH DESCRIPTION
\fBsupportChain_listBdd()\fP creates a chained list in which all the nodes of \fIpBdd\fP are represented.
.SH EXAMPLE
.nf
#include "mutnnn.h"		/* mbk utilities */
#include "logmmm.h"
pNode nodeA,nodeB,nodeC;
pNode res;
chain_list *pt;

initializeBdd(SMALL_BDD);
nodeA = createNodeTermBdd(3);
nodeB = createNodeTermBdd(3);
nodeC = createNodeTermBdd(4);
pt = NULL;
pt = addListBdd(pt,nodeA);
pt = addListBdd(pt,nodeB);
pt = addListBdd(pt,nodeC);
res = applyBdd(OR,pt);
pt = supportChain_listBdd(res);

while (pt)
   {
   printf("--- ");
   displayBdd((pNode) pt->DATA,0);	/* displays the node */
   pt = pt->NEXT;
   }
/* it will display 

--- @nodeA   index = 2  LOW = ZERO    HIGH = ONE
--- @inter   index = 3  LOW = @nodeA  HIGH = ONE
--- @res     index = 4  LOW = @inter  HIGH = ONE
*/
	
destroyBdd(1);
.fi
.SH SEE ALSO
.BR log (1),
.BR bdd (1),
.BR numberNodeBdd (3),
.BR addListBdd (3),
.BR notBdd (3),
.BR constraintBdd (3),
.BR composeBdd (3),
.BR displayBdd (3),
.BR createNodeTermBdd (3).

.so man1/alc_bug_report.1

