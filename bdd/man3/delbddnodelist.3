.\"   $Id: delbddnodelist.3,v 1.1 2002/03/18 11:26:50 ludo Exp $
.\" @(#)delbddnodelist.2 2.7 96/07/02 ; Labo masi cao-vlsi; Author : Jacomme Ludovic
.TH DELBDDNODELIST 3 "October 1, 1997" "ASIM/LIP6" "BDD FUNCTIONS"
.SH NAME
delbddnodelist \- deletes a list of \fBbdd\fP nodes.
.so man1/alc_origin.1
.SH SYNOPSIS
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include "bdd101.h"
void delbddnodelist( BddSystem, HeadList )
  bddsystem  \(**BddSystem;
  chain_list \(**HeadList;
.ft R
.fi
.SH PARAMETERS
.TP 20
\fIBddSystem\fP
The \fBbdd\fP system.
.TP
\fIHeadList\fP
The head of the \fIchain_list\fP.
.SH DESCRIPTION
\fBdelbddnodelist\fP deletes all the \fBbdd\fP nodes of the
list \fIHeadList\fP in the \fBbdd\fP system \fIBddSystem\fP.
If a null pointer is given, the default \fBbdd\fP system is used.
All the nodes have their external references decremented.
.br
.SH RETURN VALUE
\fBdelbddnodelist\fP returns nothing.
.SH EXAMPLE
.ta 3n 6n 9n 12n 15n 18n 21n
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include "bdd101.h"
   bddsystem  \(**BddSystem;
   bddcircuit \(**BddCircuit;
   bddnode    \(**BddNode;
   chain_list \(**BddList;
   chain_list \(**Expr;
   BddSystem  = createbddsystem( 100, 1000, 100, 50000 );
   BddCircuit = createbddcircuit( "hello_world", 10, 10, BddSystem );
   BddList    = (chain_list \(**)0;
   BddList = addbddnodelist( (bddsystem \(**)0, BddList,
                             addbddcircuitin( (bddcircuit \(**)0,
                                              "i0", 0, BDD_IN_MODE_FIRST ) );
   BddList = addbddnodelist( (bddsystem \(**)0, BddList,
                              addbddcircuitin( (bddcircuit \(**)0,
                                               "i1", 0, BDD_IN_MODE_FIRST );
   BddList = addbddnodelist( (bddsystem \(**)0, BddList,
                             addbddcircuitin( (bddcircuit \(**)0,
                                              "i2", 0, BDD_IN_MODE_FIRST );
   BddNode = applybddnodelist( (bddsystem \(**)0, ABL_AND, BddList );
   delbddnodelist( (bddsystem \(**)0, BddList );
   Expr = convertbddcircuitabl( (bddcircuit \(**)0, BddNode );
   /* displays (i0 and i1 and i2) */
   viewablexpr( Expr, ABL_VIEW_VHDL );
   freeablexpr( Expr );
   destroybddsystem( (bddsystem \(**)0 );
   destroybddcircuit( (bddcircuit \(**)0 );
.ft R
.fi
.SH SEE ALSO
.BR bdd (1)


.so man1/alc_bug_report.1

