.\"   $Id: garbagebddsystem.3,v 1.1 2002/03/18 11:26:50 ludo Exp $
.\" @(#)garbagebddsystem.2 2.7 96/07/02 ; Labo masi cao-vlsi; Author : Jacomme Ludovic
.TH GARBAGEBDDSYSTEM 3 "October 1, 1997" "ASIM/LIP6" "BDD FUNCTIONS"
.SH NAME
garbagebddsystem \- Forces a \fBbdd\fP garbage collection.

.so man1/alc_origin.1
.SH SYNOPSIS
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include "bdd101.h"
void garbagebddsystem( BddSystem )
  bddsystem \(**BddSystem;
.ft R
.fi
.SH PARAMETERS
.TP 20
\fIBddSystem\fP
The \fBbdd\fP system.
.SH DESCRIPTION
\fBgarbagebddsystem\fP frees all the unused \fBbdd\fP nodes in the 
system \fIBddSystem\fP.
If a null pointer is given, the default \fBbdd\fP system is used.
A \fBbdd\fP node is unused if its number of reference is null.
.br
.SH RETURN VALUE
\fBgarbagebddsystem\fP returns nothing.
.SH EXAMPLE
.ta 3n 6n 9n 12n 15n 18n 21n
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include "bdd101.h"
   bddsystem  \(**BddSystem;
   bddcircuit \(**BddCircuit;
   bddnode    \(**BddNode;
   chain_list \(**Expr;
   BddSystem  = createbddsystem( 100, 1000, 100, 50000 );
   BddCircuit = createbddcircuit( "hello_world", 10, 10, BddSystem );
   addbddcircuitin( (bddcircuit \(**)0, "i0", 0, BDD_IN_MODE_FIRST );
   addbddcircuitin( (bddcircuit \(**)0, "i1", 0, BDD_IN_MODE_FIRST );
   BddNode = applybddnode( (bddsystem \(**)0,
                           ABL_AND,
                           searchbddcircuitin( (bddcircuit \(**)0, "i0" ),
                           searchbddcircuitin( (bddcircuit \(**)0, "i1" ) );
   decbddrefext( BddNode );
   garbagebddsystem( (bddsystem \(**)0 );
   destroybddsystem( (bddsystem \(**)0 );
   destroybddcircuit( (bddcircuit \(**)0 );
.ft R
.fi
.SH SEE ALSO
.BR bdd (1)


.so man1/alc_bug_report.1

