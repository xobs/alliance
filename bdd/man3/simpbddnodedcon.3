.\"   $Id: simpbddnodedcon.3,v 1.1 2002/03/18 11:26:51 ludo Exp $
.\" @(#)simpbddnodedcon.2 2.7 96/07/02 ; Labo masi cao-vlsi; Author : Jacomme Ludovic
.TH SIMPBDDNODEDCON 3 "October 1, 1997" "ASIM/LIP6" "BDD FUNCTIONS"
.SH NAME
simpbddnodedcon \- simplifies a \fBbdd\fP with don't cares on its on-set part.

.so man1/alc_origin.1
.SH SYNOPSIS
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include "bdd101.h"
bddnode \(**simpbddnodedcon( BddSystem, BddOn, BddDc )
  bddsystem \(**BddSystem;
  bddnode   \(**BddOn;
  bddnode   \(**BddDc;
.ft R
.fi
.SH PARAMETERS
.TP 20
\fIBddSystem\fP
The \fBbdd\fP system.
.TP
\fIBddOn\fP
The first \fBbdd\fP node.
.TP
\fIBddDc\fP
The second \fBbdd\fP node.
.SH DESCRIPTION
\fBsimpbddnodedcon\fP simplifies the \fBbdd\fP node \fIBddOn\fP with
\fIBddDc\fP, in the \fBbdd\fP system \fIBddSystem\fP.
If a null pointer is given, the default \fBbdd\fP system is used.
The \fBbdd\fP node \fIBddDc\fP must be included imperatively
in the on-set part of the \fBbdd\fP node \fIBddOn\fP.
.br
.SH RETURN VALUE
\fBsimpbddnodedcon\fP returns the simplified \fBbdd\fP node.
.SH EXAMPLE
.ta 3n 6n 9n 12n 15n 18n 21n
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include "bdd101.h"
   bddsystem  \(**BddSystem;
   bddcircuit \(**BddCircuit;
   bddnode    \(**BddOn;
   bddnode    \(**BddDc;
   bddnode    \(**BddNode;
   chain_list \(**Expr;
   BddSystem  = createbddsystem( 100, 1000, 100, 50000 );
   BddCircuit = createbddcircuit( "hello_world", 10, 10, BddSystem );
   Expr = createablbinexpr( ABL_OR,
                            createablatom( "i0" ),
                            createablatom( "i1" ) );
   BddOn = addbddcircuitabl( BddCircuit, Expr );
   freeablexpr( Expr );
   Expr = createablbinexpr( ABL_NOR,
                            createablatom( "i0" ),
                            createablatom( "i1" ) );
   BddDc = addbddcircuitabl( BddCircuit, Expr );
   freeablexpr( Expr );
   BddNode = simpbddnodedcon( (bddsystem \(**)0, BddOn, BddDc );
   Expr = convertbddcircuitabl( BddCircuit, BddNode );
   /* displays '1' */
   viewablexpr( Expr, ABL_VIEW_VHDL );
   freeablexpr( Expr );
   destroybddsystem( (bddsystem \(**)0 );
   destroybddcircuit( (bddcircuit \(**)0 );
.ft R
.fi
.SH SEE ALSO
.BR bdd (1)


.so man1/alc_bug_report.1

