.\"   $Id: convertbddmuxabl.3,v 1.1 2002/03/18 11:26:50 ludo Exp $
.\" @(#)convertbddmuxabl.2 2.7 96/07/02 ; Labo masi cao-vlsi; Author : Jacomme Ludovic
.TH CONVERTBDDMUXABL 3 "October 1, 1997" "ASIM/LIP6" "BDD FUNCTIONS"
.SH NAME
convertbddmuxabl \- converts two \fBbdd\fP nodes to an \fBabl\fP multiplexor expression.

.so man1/alc_origin.1
.SH SYNOPSIS
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include "bdd101.h"
chain_list *convertbddmuxabl( BddSystem, NameArray, IndexArray, Equation, BddHigh, BddLow )
  bddsystem  \(*BddSystem;
  char      \(*\(*NameArray;
  bddindex   \(*IndexArray;
  chain_list \(*Equation;
  bddnode    \(*BddHigh;
  bddnode    \(*BddLow;
.ft R
.fi
.SH PARAMETERS
.TP 20
\fIBddSystem\fP
The \fBbdd\fP system.
.TP
\fINameArray\fP
The array of names.
.TP
\fIIndexArray\fP
The array of indexes.
.TP
\fIEquation\fP
The multiplexor command.
.TP
\fIBddHigh\fP
The first \fBbdd\fP node.
.TP
\fIBddLow\fP
The second \fBbdd\fP node.
.SH DESCRIPTION
\fBconvertbddmuxabl\fP creates the following \fBabl\fP expression
( \fIBddHigh\fP AND \fIEquation\fP ) OR ( \fIBddLow\fP AND (NOT \fIEquation\fP ) )
in the \fBbdd\fP system \fIBddSystem\fP.
If a null pointer is given, the default \fBbdd\fP system is used.
The \fINameArray\fP, and \fIIndexArray\fP parameters are used
to translate the variable nodes into atomic expressions.
The array \fINameArray\fP is list of names.
The array \fIIndexArray\fP does the correspondence between a \fBbdd\fP node 
index and a slot in the \fINameArray\fP. If the \fIIndexArray\fP parameter
is a null pointer, then the name of the \fBbdd\fP index BDD_INDEX_MIN is assumed
to be the first slot of the \fINameArray\fP, and so on.
.br
.SH RETURN VALUE
\fBconvertbddmuxabl\fP returns a pointer to the \fBabl\fP expression translated.
.SH EXAMPLE
.ta 3n 6n 9n 12n 15n 18n 21n
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include "bdd101.h"
   bddsystem  \(**BddSystem;
   bddnode    \(**BddNode1;
   bddnode    \(**BddNode2;
   chain_list \(**Expr;
   char       \(**NameArray[ 2 ];
   BddSystem = createbddsystem( 100, 1000, 100, 50000 );
   BddNode1  = addbddvarlast( BddSystem );
   BddNode2  = addbddvarlast( BddSystem );
   NameArray[ 0 ] = namealloc( "i0" );
   NameArray[ 1 ] = namealloc( "i1" );
   Expr = convertbddmuxabl( BddSystem, NameArray, (bddindex \(**)0,
                            createablatom( "C" ),  BddNode1, BddNode2 );
   /* displays (i0 and C) or (i1 and (not C)) */
   viewablexpr( Expr, ABL_VIEW_VHDL );
   freeablexpr( Expr );
   destroybddsystem( (bddsystem \(**)0 );
.ft R
.fi
.SH SEE ALSO
.BR bdd (1),
.BR abl (1).


.so man1/alc_bug_report.1

