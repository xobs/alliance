.\"   $Id: insmbkrds.3,v 1.1 2002/03/13 13:37:37 fred Exp $
.\" @(#)insmbkrds.1 1.11 93/08/18 ; Labo masi cao-vlsi
.if t \{\
.so man1/alc_contents.mac
.XS \n%
.ti 0.2i
insmbkrds
.XE
.XS0 \n%
.ti 0.2i
insmbkrds
.XE0 \}
.TH INSMBKRDS 3 "October 1, 1997" "ASIM/LIP6" "RDS PHYSICAL FUNCTIONS"
.SH NAME
insmbkrds \- converts MBK figure to RDS figure
.so man1/alc_origin.1
.SH SYNOPSIS
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include "rfmnnn.h"
rdsins_list \(**insmbkrds( FigureRds, InstanceMbk, Mode, Lynx )
   rdsfig_list \(**FigureRds;
   phins_list  \(**InstanceMbk;
   char         Mode;
   char         Lynx;
.ft R
.fi
.SH PARAMETER
.TP 20
\fIFigureRds\fP
The Rds figure which has to receive the RDS instance issue to the MBK instance conversion.
.TP
\fIInstanceMbk\fP
MBK instance which has to be converted and added to the RDS figure.
.TP
\fIMode\fP
This field can take three values :
.RS
.PP
\'A\' : All the cell is loaded in ram.
.PP
\'P\' : Only information concerning the model interface is present, that means connector
s and the abutment box.
.PP
\'C\' : Finishes to fill an already loaded figure in \'P\' mode, in order to have it all in memory. After this, the conversion is applied.
.PP
\fINote\fP : The loading mode here is the \fBMBK\fP mode.
.RE
.TP
\fILynx\fP
Flag used for the segment conversion. If the parameter Lynx is set to 0 then thi
s is the normal conversion mode. If the parameter Lynx is set to 1 then the rds
structure generated permits to extract equipotentials rectangles.
.SH DESCRIPTION
The \fIinsmbkrds\fP function creates in the RDS figure the RDS instance issue to the conversion of the MBK instance to RDS format. If the parameter \'Mode\' is set to \'A\' then all the instance is loaded, else if parameter \'Mode\' is set to \'P\' then connectors and abutment box and through routes are loaded (for more information, see getphfig and loadphfig MBK functions).
.SH RETURN VALUE
A pointer to the newly created instance is returned.
.SH ERRORS
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
"Rds202: rdsalloc error, can't continue !"
.ft R
.RS
it's impossible to allocate the memory size desired
.SH EXAMPLE
.ta 3n 6n 9n 12n 15n 18n 21n
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
        #include "mphnnn.h"
        #include "mutnnn.h"
        #include "rdsnnn.h"
        #include "rfmnnn.h"
        #include "rtlnnn.h"
        typedef struct UserStruct
         {
           char \(**STRING;
           void \(**USER1;
         } UserStruct;
        main()
          {
            phfig_list  \(**MbkFigure;
            phins_list  \(**MbkInstance;
            rdsfig_list \(**RdsFigure;
            rdsins_list \(**RdsInstance;
            mbkenv();
            rdsenv();
            loadrdsparam();
            /\(** create MbkFigure Named "core" \(**/
            MbkFigure    = addphfig("core"); 
            /\(** add Mbk instance "n1_y" to MbkFigure named "core" \(**/
            MbkInstance  = addphins(MbkFigure,"n1_y","inv_1",NOSYM,4,9);
            /\(** create RdsFigure named "core_2" \(**/
            RdsFigure    = addrdsfig("core_2",sizeof(UserStruct));
            /\(** create RdsInstance with MbkInstance \(**/
            RdsInstance  = \fBinsmbkrds\fP ( RdsFigure, MbkInstance, 'A', 0 );
            viewrdsins ( RdsInstance );
            . . .
          }
.ft R
.fi
.SH SEE ALSO
.BR librfm,
.BR librds,
.BR viewrfmins,
.BR loadrdsparam


.so man1/alc_bug_report.1

