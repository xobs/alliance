.\"   $Id: rdsfree.3,v 1.1 2002/03/13 13:37:37 fred Exp $
.\" @(#)rdsfree.1 1.11 93/08/18 ; Labo masi cao-vlsi
.if t \{\
.so man1/alc_contents.mac
.XS \n%
.ti 0.2i
rdsfree
.XE
.XS0 \n%
.ti 0.2i
rdsfree
.XE0 \}
.TH RDSFREE 3 "October 1, 1997" "ASIM/LIP6" "RDS PHYSICAL FUNCTIONS"
.SH NAME
 rdsfree \- free memory place
.so man1/alc_origin.1
.SH SYNOPSIS
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
 #include "rdsnnn.h"
  void  rdsfree( Pointer, Size )
    char         \(**Pointer;
    unsigned int  Size;
.ft R
.fi
.SH PARAMETER
.TP 20
\fIPointer\fP
pointer to the memory to free.
.TP
\fISize\fP
Size of the memory to free.
.SH DESCRIPTION
The \fIrdsfree\fP function deletes memory of \fIsize\fP=\'Size\' allocated with rdsalloc function. If the parameter Size is set to ZERO (or RDS_ALLOC_BLOCK) then the memory is deleted by BLOCK else the memory is deleted by HEAP.
.PP
\fINote\fP : A memory allocated by BLOCK (resp. by HEAP) must be deleted by BLOCK (resp. by HEAP).
.SH RETURN VALUE
nothing
.SH ERRORS
none
.SH EXAMPLE
.ta 3n 6n 9n 12n 15n 18n 21n
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
          #include "rdsnnn.h"
	    main()
	     {
	       rdsrec_list \(**Rectangle;
	       rdsfig_list \(**Figure;
               Figure    = allocrdsfig ();
	       Rectangle = allocrdsrec ();
	       Rectangle->X  = 20;
	       Rectangle->Y  = 20;
	       Rectangle->DX = 48;
	       Rectangle->DY = 8;
	       ...
	       /\(** \(**/ \fBrdsfree\fP ( Rectangle, sizeof (rdsrec_list));
               /\(** deletes a figure allocated by block \(**/
               /\(** \(**/ \fBrdsfree\fP ( Figure , RDS_ALLOC_BLOCK);
	     }
.ft R
.fi
.SH SEE ALSO
.BR librds,
.BR rdsalloc


.so man1/alc_bug_report.1

