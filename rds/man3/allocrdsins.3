.\"   $Id: allocrdsins.3,v 1.1 2002/03/13 13:37:37 fred Exp $
.\" @(#)allocrdsins.1 1.11 93/08/18 ; Labo masi cao-vlsi
.if t \{\
.so man1/alc_contents.mac
.XS \n%
.ti 0.2i
allocrdsins
.XE
.XS0 \n%
.ti 0.2i
allocrdsins
.XE0 \}
.TH ALLOCRDSINS 3 "October 1, 1997" "ASIM/LIP6" "RDS PHYSICAL FUNCTIONS"
.SH NAME
 allocrdsins \- allocates memory for an instance
.so man1/alc_origin.1
.SH SYNOPSIS
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include"rdsnnn.h"
rdsins_list \(**allocrdsins()
.ft R
.fi
.SH PARAMETER
none
.SH DESCRIPTION
Allocates a memory block for rdsins_list structure. Fields contained in the structure are set to NULL for the pointers and 0L for numbers.
.PP
NOTE: Allocation by block ( see rdsalloc() function ).
.SH RETURN VALUE
The pointer to the allocated instance.
.SH ERRORS
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
"Rds202: rdsalloc error, can't continue !"
.ft R
.RS
it's impossible to allocate the memory size desired.
.SH EXAMPLE
.ta 3n 6n 9n 12n 15n 18n 21n
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
            #include "mutnnn.h" 
	    #include "rdsnnn.h"
	    #include "rtlnnn.h"
	    main()
	     {
	       rdsins_list \(**RdsInstance;
               mbkenv();
               rdsenv();
               loadrdsparam();
	       RdsInstance = \fBallocrdsins\fP ();
	       RdsInstance->FIGNAME = namealloc ("na2_y");
	       RdsInstance->INSNAME = namealloc ("and2");
	       ...
	     }
.ft R
.fi
.SH SEE ALSO
.BR librds,
.BR freerdsins,
.BR rdsalloc,
.BR rdsfree


.so man1/alc_bug_report.1

