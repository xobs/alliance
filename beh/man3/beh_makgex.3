.\"   $Id: beh_makgex.3,v 1.1 2002/04/04 14:54:48 ludo Exp $
.\" @(#)beh_makgex.3 109 Oct 15 1995 UPMC ; Pirouz BAZARGAN SABET
.TH BEH_MAKGEX 3 "October 1, 1997" "ASIM/LIP6" "BHL functions"

.so man1/alc_origin.1
.SH NAME
.PP
\fBbeh_makgex\fP \- create a GEX for each expression in a description

.SH SYNOPSIS
.PP
.nf
void beh_makgex (fig_pnt)
struct befig *fig_pnt;
.fi

.SH PARAMETERS
.PP
.TP 10
\fIfig_pnt\fP
pointer of the BEFIG structure

.SH DESCRIPTION
.PP
\fBbeh_makgex()\fP reads a whole behavioral description (a BEFIG) and
creates a GEX for each expression present in the description. A GEX is
a structure able to represents binary expressions. It has almost the same
organization as an ABL but, like a BDD, uses an index to represent variables.
For simple signals (simple outputs - BEOUT, simple iternal signals - BEAUX,
simple internal delayed signals - BEDLY), one GEX is created which corresponds
to the expression that drives the signal. The GEX is stored into a specific
field in the corresponding structure (NODE). For signals that have multiple
expressions (registers, internal busses, bussed ports), one GEX is created
for each expression and stored in the corresponding field of the structure
(CNDNODE for conditions or VALNODE for the value).

.PP
\fIfig_pnt\fP represents the pointer of the description.

.SH EXAMPLE
.PP
.nf
#include <beh109.h>
struct befig *befig_pnt;

beh_makgex (befig_pnt);
.fi

.SH SEE ALSO
.PP
beh(3), befig(3), berin(3), beaux(3), bereg(3), beh_debug(3), beh_makbdd(3)


.so man1/alc_bug_report.1

