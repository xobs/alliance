.\"   $Id: autfreeheap.3,v 1.1 2002/03/21 13:17:24 ludo Exp $
.\" @(#)autfreeheap.2 2.7 96/07/02 ; Labo masi cao-vlsi; Author : Jacomme Ludovic
.TH AUTFREEHEAP 3 "October 1, 1997" "ASIM/LIP6" "AUT FUNCTIONS"
.SH NAME
autfreeheap \- releases a memory block, and put it on the heap.
.so man1/alc_origin.1
.SH SYNOPSIS
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include "aut101.h"
void autfreeheap( Pointer, Size )
   char         \(**Pointer;
   unsigned int Size;
.ft R
.fi
.SH PARAMETERS
.TP 20
\fIPointer\fP
Pointer to be given back to the heap.
.TP
\fISize\fP
Size of the block previously allocated by \fIautallocheap\fP.
.SH DESCRIPTION
\fBautfreeheap\fP frees a pointer and puts the block back to the heap.
Its use is necessary to free memory blocks, previously allocated
by \fIautallocheap\fP.
.br
.SH RETURN VALUE
\fBautfreeheap\fP returns nothing.
.SH EXAMPLE
.ta 3n 6n 9n 12n 15n 18n 21n
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include "aut101.h"
typedef struct bipointer
{
  struct bipointer \(**NEXT;
  void             \(**DATA;
} bipointer;
bipointer \(**addbipointer( Data );
  void \(**Data;
{
  bipointer \(**Bp = (bipointer \(**)autallocheap( sizeof( bipointer ) );
  Bp->DATA = Data;
  return Bp;
}
void delbipointer( Bp );
  bipointer \(**Bp;
{
  autfreeheap( Pointer, sizeof( bipointer ) );
}
.ft R
.fi
.SH SEE ALSO
.BR aut (1),
.BR autresizeblock(3),
.BR autallocheap(3),
.BR autallocblock(3),
.BR autfreeblock(3).


.so man1/alc_bug_report.1

