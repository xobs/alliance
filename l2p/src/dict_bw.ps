% = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
% This is the beginning of the l2p BLACK & WHITE PostScript dictionary.
% (If you want to change patterns, this is THE place to do it.)
% (Remember that you can substitute another PostScript dictionary.)
%%Pages: 1 1
%%EndComments
%%BeginPreview: 256 64 1 64
%0000000000000000000000000000000000000000000000000000000000000000
%0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0
%0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0
%0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0
%0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0
%0FFFF000000000000000000000000000000000000000000000000000000FFFF0
%0FFFF00000000000000000000000000000000000000F000000000000000FFFF0
%0FFFF00000000FFFF0FFF000FFF000000000000000FFF00000000000000FFFF0
%0FFFF00000000F0000F00F0F00000000000000000FF0FF00F0F0FFF0000FFFF0
%0FFFF00000000F0000F00F0F0000000000000000FFF0FFF0F0F0F0F0000FFFF0
%0FFFF00000000FFF00FFF000FF0000000000000000F0F000F0F0FFF0000FFFF0
%0FFFF00000000F0000F0000000F000000000000000F0F000F0F0F000000FFFF0
%0FFFF00000000F0000F0000000F000000000000000F0F000FFF0F000000FFFF0
%0FFFF00000000FFFF0F0000FFF0000000000000000FFF00000000000000FFFF0
%0FFFF000000000000000000000000000000000000000000000000000000FFFF0
%0FFFF000000000000000000000000000000000000000000000000000000FFFF0
%0FFFF00000000FFF00FFF00FFFF0F000F0FFF0FFFF0F00000F000000000FFFF0
%0FFFF00000000F00F0F00F0F0000F000F00F00F0000F00000F000000000FFFF0
%0FFFF00000000F00F0F00F0F00000F0F000F00F0000F00F00F000000000FFFF0
%0FFFF00000000FFF00FFF00FFF000F0F000F00FFF00F00F00F000000000FFFF0
%0FFFF00000000F0000F0F00F00000F0F000F00F00000F0F0F0000000000FFFF0
%0FFFF00000000F0000F00F0F000000F0000F00F00000FF0FF0000000000FFFF0
%0FFFF00000000F0000F00F0FFFF000F000FFF0FFFF00F000F0000000000FFFF0
%0FFFF000000000000000000000000000000000000000000000000000000FFFF0
%0FFFF000000000000000000000000000000000000000000000000000000FFFF0
%0FFFF000000000000000000000000000000000000000000000000000000FFFF0
%0FFFF000000000000000000000000000000000000000000000000000000FFFF0
%0FFFF000000000000000000000000000000000000000000000000000000FFFF0
%0FFFF000000000000000000000000000000000000000000000000000000FFFF0
%0FFFF000000000000000000000000000000000000000000000000000000FFFF0
%0FFFF00000000F00000FF00F00F00FF00F00F0FFFF00000000000000000FFFF0
%0FFFF00000000F0000F00F0F00F0F00F0F00F00F0000000000000000000FFFF0
%0FFFF00000000F0000F00F0F00F0F00F0F00F00F0000000000000000000FFFF0
%0FFFF00000000F0000FFFF00FF00F00F0F00F00F0000000000000000000FFFF0
%0FFFF00000000F0000F00F00F000F00F0F00F00F0000000000000000000FFFF0
%0FFFF00000000F0000F00F00F000F00F0F00F00F0000000000000000000FFFF0
%0FFFF00000000FFFF0F00F00F0000FF00FFFF00F0000000000000000000FFFF0
%0FFFF000000000000000000000000000000000000000000000000000000FFFF0
%0FFFF000000000000000000000000000000000000000000000000000000FFFF0
%0FFFF000000000FF0000000000000000000000000000000000000000000FFFF0
%0FFFF00000000F00F000000000000000000000000000000000000000000FFFF0
%0FFFF00000000000F000000000000000000000000000000000000000000FFFF0
%0FFFF0000000000F0000000000000000000000000000000000000000000FFFF0
%0FFFF000000000F00000000000000000000000000000000000000000000FFFF0
%0FFFF00000000F000000000000000000000000000000000000000000000FFFF0
%0FFFF00000000FFFF000000000000000000000000000000000000000000FFFF0
%0FFFF000000000000000000000000000000000000000000000000000000FFFF0
%0FFFF000000000000000000000000000000000000000000000000000000FFFF0
%0FFFF00000000FFF000FF00FFF00FFFF0FFF00000000000000000000000FFFF0
%0FFFF00000000F00F0F00F0F00F0F0000F00F0000000000000000000000FFFF0
%0FFFF00000000F00F0F00F0F00F0F0000F00F0000000000000000000000FFFF0
%0FFFF00000000FFF00FFFF0FFF00FFF00FFF00000000000000000000000FFFF0
%0FFFF00000000F0000F00F0F0000F0000F0F00000000000000000000000FFFF0
%0FFFF00000000F0000F00F0F0000F0000F00F0000000000000000000000FFFF0
%0FFFF00000000F0000F00F0F0000FFFF0F00F0000000000000000000000FFFF0
%0FFFF000000000000000000000000000000000000000000000000000000FFFF0
%0FFFF000000000000000000000000000000000000000000000000000000FFFF0
%0FFFF000000000000000000000000000000000000000000000000000000FFFF0
%0FFFF000000000000000000000000000000000000000000000000000000FFFF0
%0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0
%0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0
%0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0
%0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0
%0000000000000000000000000000000000000000000000000000000000000000
%%EndPreview
%%EndProlog

%%BeginSetup

/MF
{statusdict /manualfeed true put} bind def

/INFO		% Change jobname in order to give info about status
{/statusdict where exch pop {
	statusdict exch /jobname exch put
} if } bind def 

/NOP		% Draw nothing with x,y,w,h
{pop pop pop pop} bind def

/ER		% Draw an [E]mpty [R]ectangle with x,y,w,h
{/h exch def /w exch def newpath moveto
0 h rlineto w 0 rlineto 0 h neg rlineto
closepath stroke} bind def

/E2R		% Draw an [E]mpty dashed [R]ectangle with x,y,w,h
{/context save def /h exch def /w exch def newpath moveto
1.0 setlinewidth [8.0 8.0] 0 setdash
0 h rlineto w 0 rlineto 0 h neg rlineto
closepath stroke context restore} bind def

/D1FR           % Draw a [D]iagonal [1] [F]illed [R]ectangle with x,y,w,h
{/context save def /h exch def /w exch def /y exch def /x exch def newpath
0.5 setlinewidth
x y moveto 0 h rlineto w 0 rlineto 0 h neg rlineto closepath stroke
x y moveto 0 h rlineto w 0 rlineto 0 h neg rlineto closepath clip
0.1 setlinewidth
/pas 8 def
% ordonnee de depart:
y pas div cvi pas mul /yy exch def
% abscisse de depart:
x h neg add pas div cvi pas mul
pas x w add  {
        newpath  yy moveto  h pas add  h pas add  rlineto stroke
} for context restore} bind def

/D2FR           % Draw a [D]iagonal [2] [F]illed [R]ectangle with x,y,w,h
{/context save def /h exch def /w exch def /y exch def /x exch def newpath
0.5 setlinewidth
x y moveto 0 h rlineto w 0 rlineto 0 h neg rlineto closepath stroke
x y moveto 0 h rlineto w 0 rlineto 0 h neg rlineto closepath clip
0.8 setlinewidth
/pas 16 def
% ordonnee de depart:
y pas div cvi pas mul /yy exch def
% abscisse de depart:
x h neg add pas div cvi pas mul
pas x w add  {
        newpath  yy moveto  h pas add  h pas add  rlineto stroke
} for context restore} bind def

/D6FR           % Draw a [D]iagonal [6] [F]illed [R]ectangle with x,y,w,h
{/context save def /h exch def /w exch def /y exch def /x exch def newpath
0.5 setlinewidth
x y moveto 0 h rlineto w 0 rlineto 0 h neg rlineto closepath stroke
x y moveto 0 h rlineto w 0 rlineto 0 h neg rlineto closepath clip
0.5 setlinewidth [0.5 8] 0 setdash
0 8 x w add y add h add  {
        newpath 0 moveto y h add neg  y h add  rlineto stroke
} for context restore} bind def

/D7FR           % Draw a [D]iagonal [7] [F]illed [R]ectangle with x,y,w,h
{/context save def /h exch def /w exch def /y exch def /x exch def newpath
0.5 setlinewidth
x y moveto 0 h rlineto w 0 rlineto 0 h neg rlineto closepath stroke
x y moveto 0 h rlineto w 0 rlineto 0 h neg rlineto closepath clip
1.0 setlinewidth [1 8] 0 setdash
0 8 x w add y add h add  {
        newpath 0 moveto y h add neg  y h add  rlineto stroke
} for context restore} bind def

/D8FR           % Draw a [D]iagonal [8] [F]illed [R]ectangle with x,y,w,h
{/context save def /h exch def /w exch def /y exch def /x exch def newpath
x y moveto 0 h rlineto w 0 rlineto 0 h neg rlineto closepath stroke
x y moveto 0 h rlineto w 0 rlineto 0 h neg rlineto closepath clip
/pas 12 def
% ordonnee de depart:
y pas div cvi pas mul /yy exch def
0.8 setlinewidth
% abscisse de depart:
x pas div cvi pas mul
pas x w add h add  {
        newpath yy moveto h neg pas neg add  h pas add rlineto stroke
} for context restore} bind def

/D9FR           % Draw a [D]iagonal [9] [F]illed [R]ectangle with x,y,w,h
{/context save def /h exch def /w exch def /y exch def /x exch def newpath
0.5 setlinewidth
x y moveto 0 h rlineto w 0 rlineto 0 h neg rlineto closepath stroke
x y moveto 0 h rlineto w 0 rlineto 0 h neg rlineto closepath clip
/pas 8 def
% ordonnee de depart:
y pas div cvi pas mul /yy exch def
0.1 setlinewidth
% abscisse de depart:
x pas div cvi pas mul
pas x w add h add  {
        newpath yy moveto h neg pas neg add  h pas add rlineto stroke
} for context restore} bind def

/X1FR           % Draw a [X]cross [1] [F]illed [R]ectangle with x,y,w,h
{/context save def /h exch def /w exch def /y exch def /x exch def newpath
0.5 setlinewidth
x y moveto 0 h rlineto w 0 rlineto 0 h neg rlineto closepath stroke
x y moveto 0 h rlineto w 0 rlineto 0 h neg rlineto closepath clip
/pas 6 def
% ordonnee de depart:
y pas div cvi pas mul /yy exch def
0.1 setlinewidth
% abscisse1 de depart:
x h neg add pas div cvi pas mul
pas x w add  {
        newpath   yy moveto  h pas add  h pas add  rlineto stroke
} for
% abscisse2 de depart:
x pas div cvi pas mul
pas x w add h add  {
        newpath  yy moveto h neg pas neg add  h pas add rlineto stroke
} for context restore} bind def

/X2FR           % Draw a [X]cross [2] [F]illed [R]ectangle with x,y,w,h
{/context save def /h exch def /w exch def /y exch def /x exch def newpath
0.5 setlinewidth
x y moveto 0 h rlineto w 0 rlineto 0 h neg rlineto closepath stroke
x y moveto 0 h rlineto w 0 rlineto 0 h neg rlineto closepath clip
/pas 3 def
% ordonnee de depart:
y pas div cvi pas mul /yy exch def
0.2 setlinewidth
% abscisse1 de depart:
x h neg add pas div cvi pas mul
pas x w add  {
        newpath   yy moveto  h pas add  h pas add  rlineto stroke
} for
% abscisse2 de depart:
x pas div cvi pas mul
pas x w add h add  {
        newpath  yy moveto h neg pas neg add  h pas add rlineto stroke
} for context restore} bind def

/showstring {
        gsave
                rotate
                % dup stringwidth pop  2 div neg 0 rmoveto
                false charpath
                gsave
                        1 setgray
                        2 setlinewidth
                        1 setlinejoin
                        1 setlinecap
                        stroke
                grestore
        fill
        grestore
} bind def

%- - - BEGIN OF LAYER TRADUCTION - - -
/RDS_NWELL_init {
	/R { D6FR } bind def
} def
/RDS_PWELL_init {
	/R { D6FR } bind def
} def
/RDS_NIMP_init {
	/R { D6FR } bind def
} def
/RDS_PIMP_init {
	/R { D6FR } bind def
} def
/RDS_ACTIV_init {
	/R { D6FR } bind def
} def
/RDS_NDIF_init {
	/R { D9FR } bind def
} def
/RDS_PDIF_init {
	/R { D1FR } bind def
} def
/RDS_NTIE_init {
	/R { D9FR } bind def
} def
/RDS_PTIE_init {
	/R { D1FR } bind def
} def
/RDS_POLY_init {
	/R { X1FR } bind def
} def
/RDS_GATE_init {
	/R { X1FR } bind def
} def
/RDS_TPOLY_init {
	/R { X1FR } bind def
} def
/RDS_CONT_init {
	/R { X2FR } bind def
} def
/RDS_ALU1_init {
	/R { D7FR } bind def
} def
/RDS_VALU1_init {
        /R { D7FR } bind def
} def
/RDS_TALU1_init {
	/R { D7FR } bind def
} def
/RDS_VIA1_init {
	/R { X2FR } bind def
} def
/RDS_TVIA1_init {
        /R { X2FR } bind def
} def
/RDS_ALU2_init {
	/R { D2FR } bind def
} def
/RDS_TALU2_init {
	/R { D2FR } bind def
} def
/RDS_VIA2_init {
	/R { X2FR } bind def
} def
/RDS_ALU3_init {
	/R { D8FR } bind def
} def
/RDS_TALU3_init {
	/R { D8FR } bind def
} def
/RDS_VIA3_init {
	/R { X2FR } bind def
} def
/RDS_ALU4_init {
	/R { D8FR } bind def
} def
/RDS_CPAS_init {
	/R { NOP } bind def
} def
/RDS_REF_init {
	/R { NOP } bind def
} def
/RDS_USER0_init {
	/R { NOP } bind def
} def
/RDS_USER1_init {
	/R { NOP } bind def
} def
/RDS_USER2_init {
	/R { NOP } bind def
} def
/RDS_ABOX_init {
	/R { E2R } bind def
} def
/UNKNOW_init {
	/R { NOP } bind def
} def
%- - - END   OF LAYER TRADUCTION - - -
%%EndSetup

% This is the end of the l2p BLACK & WHITE PostScript dictionary.
% = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
