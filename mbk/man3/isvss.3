.\"   $Id: isvss.3,v 1.2 2003/10/20 08:55:19 xtof Exp $
.\" @(#)isvss.2 2.11 91/08/22 ; Labo masi cao-vlsi; Author : Frederic Petrot
.if t \{\
.so man1/alc_contents.mac
.XS \n%
.ti 0.2i
isvss
.XE
.XS4 \n%
.ti 0.2i
isvss
.XE4 \}
.TH ISVSS 3 "October 1, 1997" "ASIM/LIP6" "MBK UTILITY FUNCTIONS"
.SH NAME
isvss \-tells if a name contains the pattern defined by the user
.so man1/alc_origin.1
.SH SYNOPSIS
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include "mut.h"
char* isvss(s)
char \(**s;
.ft R
.fi
.SH PARAMETER
.TP 20
\fIs\fP
Pointer to the string to be check as power high
.SH DESCRIPTION
\fBisvss\fP searches an occurrence of the string defined by the \fBMBK_VSS\fP(1)
environment variable in the string \fIs\fP.
If this string is not set by the user, its default value is "vss".
.SH RETURN VALUE
\fBisvss\fP return \fBNULL\fP the pattern is not present 
If the pattern is found, a value different from \fBNULL\fP is returned.
.SH EXAMPLE
.ta 3n 6n 9n 12n 15n 18n 21n
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include "mut.h"
#include "mlo.h"
find_a_vss(f)
lofig_list *f;
{
locon_list *c;
losig_list *s;
	/* first check connectors */
	for (c = f->LOCON; c; c = c->NEXT) {
		if (isvss(c->NAME))
			return c->SIG;
		if (isvss(getsigname(c->SIG)))
			return c->SIG;
	}
	/* then check internal signals */
	for (s = f->LOSIG; s; s = s->NEXT)
		if (s->TYPE == INTERNAL)
			if (isvss(getsigname(s)))
				return s;
	return NULL;
}
.ft R
.fi
.SH SEE ALSO
.BR mbk (1),
.BR mbkenv (3),
.BR instr (3),
.BR isvdd (3),
.BR MBK_VDD (1),
.BR MBK_VSS (1).


.so man1/alc_bug_report.1

