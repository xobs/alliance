.\"   $Id: delphins.3,v 1.1 2002/03/08 13:51:01 fred Exp $
.\" @(#)delphins.2 2.11 91/08/22 ; Labo masi cao-vlsi; Author : Frederic Petrot
.if t \{\
.so man1/alc_contents.mac
.XS \n%
.ti 0.2i
delphins
.XE
.XS0 \n%
.ti 0.2i
delphins
.XE0 \}
.TH DELPHINS 3 "October 1, 1997" "ASIM/LIP6" "MBK PHYSICAL FUNCTIONS"
.SH NAME
delphins \- delete a physical instance
.so man1/alc_origin.1
.SH SYNOPSIS
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include "mph.h"
int delphins(ptfig, insname)
phfig_list \(**ptfig;
char \(**insname;
.ft R
.fi
.SH PARAMETERS
.TP 20
\fIptfig\fP
Pointer to the figure in which the instance should be deleted
.TP
\fIinsname\fP
Name of the instance to be deleted.
.SH DESCRIPTION
\fBdelphins\fP delete the instance called \fIinsname\fP in the figure 
pointed to by \fIptfig\fP. This instance is warrantied to be unique, because
its name is an identifier at the given hierarchical level.
The list consistency is maintainded, and the space freed.
.SH RETURN VALUE
\fBdelphins\fP returns \fB1\fP if the instance has been deleted, \fB0\fP
if no such instance exists in the list.
.SH EXAMPLE
.ta 3n 6n 9n 12n 15n 18n 21n
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include "mph.h"
char \(**was_existing(ptfig, insname)
phfig_list \(**ptfig;
char \(**insname;
{
   return delphins(ptfig, insname) ? "you just killed it!"
												: "wasn't here anyway"; 
}
.ft R
.fi
.SH SEE ALSO
.BR mbk (1),
.BR phfig (3),
.BR phins (3),
.BR addphins (3),
.BR getphins (3).


.so man1/alc_bug_report.1

