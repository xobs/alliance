.\"   $Id: addloself.3,v 1.1 2002/08/14 20:05:38 pnt Exp $
.\" @(#)addloself.2 2.11 91/08/22 ; Labo ASIM cao-vlsi; Author : Pierre Nguyen Tuong
.if t \{\
.so man1/alc_contents.mac
.XS \n%
.ti 0.2i
addloself
.XE
.XS2 \n%
.ti 0.2i
addloself
.XE2 \}
.TH ADDLOSELF 3 "August 14, 2002" "ASIM/LIP6" "MBK LOGICAL FUNCTIONS"
.SH NAME
addloself \- create a logical inductor
.so man1/alc_origin.1
.SH SYNOPSIS
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
.ta 3n 23n
#include "mlo.h"

loself_list \(**addloself(ptfig,type,self,scon1,scon2,name)
lofig_list \(**ptfig ;
char type ;
double self ;
losig_list \(**scon1, \(**scon2 ;
const char \(**name ;
.ft R
.fi
.SH PARAMETERS
.TP 20
\fIptfig\fP
Pointer to the figure in which the inductor should be added
.TP
\fItype\fP
Inductor type
.TP
\fIself\fP
Inductor value in Henry
.TP
\fIscon1\fP
Pointer to the signal to be connected on the inductor top plate
.TP
\fIscon2\fP
Pointer to the signal to be connected on the inductor bottom plate
.TP
\fIname\fP
Inductor instance name
.SH DESCRIPTION
\fBaddloself\fP creates a new inductor, and adds it to the
list of inductors pointed to by \fIptfig \-> LOSELF\fP. The new inductor is 
added in front of the list, and becomes itself the list head.
.br
The \fItype\fP parameter can take one value :
.RS
.TP 20
\fBSELFMIM\fP
for a metal inductor
.RE
.LP
The \fIself\fP\ argument is the inductor value in Henry.
.br
Two connectors are created each time a inductor is added, and the
\fIscon1\fP and \fIscon2\fP \fBlosigs\fP are attached to
the \fISIG\fP field of the \fBlocon\fP of the appropriate connector. The
connectors names are \fIscon1 \fP and \fIscon2\fP; their
direction, \fIDIR\fP, are set to \fB'L'\fP, and their \fITYPE\fP \fBINTERNAL\fP.
For details on the structuself, see \fBlocon\fP(3) and \fBloself\fR(3).
.SH RETURN VALUE
\fBaddloself\fP returns a pointer to the newly created inductor.
.SH ERRORS
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
"\(**\(**\(** mbk error \(**\(**\(** illegal inductor type : \fItype\fP"
.ft R
.RS
The \fItype\fP is not a legal inductor type.
.RE
.SH EXAMPLE
.ta 3n 6n 9n 12n 15n 18n 21n
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include "mlo.h"

void parallel_inductors(void) /\(** netlist of two parallel inductors \(**/
{
  lofig_list \(**pt  = NULL ;
  losig_list \(**in  = NULL ;
  losig_list \(**out = NULL ;

  pt = addlofig("parallel_inductors") ;
  addlocon(pt,"in",in = givelosig(pt,0),IN) ;
  addlocon(pt,"out",out = givelosig(pt,1),OUT) ;

  addloself(pt,SELFMIM,0.6e-6,in,out,"self1") ;
  addloself(pt,SELFMIM,0.6e-6,in,out,"self2") ;
}
.ft R
.fi
.SH SEE ALSO
.BR mbk (1),
.BR lofig (3),
.BR loself (3),
.BR locon (3),
.BR delloself (3).


.so man1/alc_bug_report.1

