.\"   $Id: viewlofig.3,v 1.1 2002/03/08 13:51:04 fred Exp $
.\" @(#)viewlofig.2 2.11 91/08/22 ; Labo masi cao-vlsi; Author : Frederic Petrot
.if t \{\
.so man1/alc_contents.mac
.XS \n%
.ti 0.2i
viewlofig
.XE
.XS2 \n%
.ti 0.2i
viewlofig
.XE2 \}
.TH VIEWLOFIG 3 "October 1, 1997" "ASIM/LIP6" "MBK LOGICAL FUNCTIONS"
.SH NAME
viewlofig \- display elements of a \fBlofig_list\fP
.so man1/alc_origin.1
.SH SYNOPSIS
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include "mlo.h"
void viewlofig(ptfig)
lofig_list \(**ptfig;
.ft R
.fi
.SH PARAMETER
.TP 20
\fIptfig\fP
Pointer to the \fBlofig\fP to be scanned
.SH DESCRIPTION
\fBviewlofig\fP scans all the primary elements of the \fBlofig_list\fP 
loaded in ram, and displays a textual output of the data strcuture contents.
The \fILOINS\fP, \fILOCON\fP, \fILOSIG\fP and \fILOTRS\fP are scanned, and
their contents displayed.
.br
Its use is mostly for debugging purposes, and educational ones, since the
output is quite verbose, if very easy to understand.
.SH EXAMPLE
.ta 3n 6n 9n 12n 15n 18n 21n
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include <stdio.h>
#include "mlo.h"
void view_fig_to_file(ptfig)
lofig_list \(**ptfig;
{
FILE \(**file = freopen(ptfig\->NAME, WRITE_TEXT, stdout);
	if (!file) {
		(void)fputs("Can't reopen stdout!\\n", stderr);
		EXIT();
	}
	viewlofig(ptfig\->NAME); /\(** to file called name \(**/
	(void)fclose(file);
}
.ft R
.fi
.SH SEE ALSO
.BR mbk (1),
.BR lofig (3),
.BR viewlo (3),
.BR viewloins (3),
.BR viewlotrs (3),
.BR viewlosig (3),
.BR viewloinscon (3),
.BR viewlofigcon (3).


.so man1/alc_bug_report.1

