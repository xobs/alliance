.\"   $Id: delhtitem.3,v 1.1 2002/03/08 13:51:01 fred Exp $
.\" @(#)delhtitem.2 7.01 92/08/22 ; Labo masi cao-vlsi; Author : Luc Burgun
.\" slightly modified by Fred Petrot for mbk adaptation on 22/06/92
.if t \{\
.so man1/alc_contents.mac
.XS \n%
.ti 0.2i
delhtitem
.XE
.XS4 \n%
.ti 0.2i
delhtitem
.XE4 \}
.TH DELHTITEM 3 "October 1, 1997" "ASIM/LIP6" "MBK HASH TABLE MANAGEMENT FUNCTIONS"
.SH NAME
delhtitem \- removes an item in an hash table
.so man1/alc_origin.1
.SH SYNOPSIS
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
.nf
#include "mut.h"
int delhtitem(table, key)
ht \(**table;
void \(**key;
.fi
.ft R
.SH PARAMETERS
.TP 20
\fItable\fP
Hash table pointer
.TP 20
\fIkey\fP
Key used by the hash coding function indicating the item to be deleted
.SH DESCRIPTION
\fBdelhtitem()\fP removes an item in the hash table pointed to by \fItable\fP.
.SH RETURN VALUE
If the key doesn't exist, the function returns \fBEMPTYHT\fP,
if it does, then its associated value is returned.
.SH EXAMPLE
.ta 3n 6n 9n 12n 15n 18n 21n
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
.nf
#include "mut.h"
checksigname(p, h)
lofig_list \(**p;
ht \(**h; 
{
int i;
char \(**amatla;
	/\(** check for signal and connector name unicity \(**/
	for (ptcon = p->LOCON; ptcon; ptcon = ptcon->NEXT)
		addhtitem(h, ptcon->NAME, 0);
	for (ptsig = p->LOSIG; ptsig; ptsig = ptsig->NEXT) {
		if (ptsig->TYPE == INTERNAL) {
			amatla = getsigname(ptsig);
			if (!sethtitem(h, amatla, 0)) {
				printf("N %s;\\n", amatla);
			}
		}
	}
	/\(** keep only internal signal names in the hash table \(**/
	for (ptcon = p->LOCON; ptcon; ptcon = ptcon->NEXT)
		(void)delhtitem(h, ptcon->NAME);
}
.fi
.ft R
.SH SEE ALSO
.BR mbk (1),
.BR addth (3),
.BR delht (3),
.BR addhtitem (3),
.BR gethtitem (3),
.BR sethtitem (3),
.BR viewht (3).


.so man1/alc_bug_report.1

